---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: awsbuilds.infrastructure.forge.build
spec:
  group: infrastructure.forge.build
  names:
    categories:
    - forge
    - aws
    kind: AWSBuild
    listKind: AWSBuildList
    plural: awsbuilds
    singular: awsbuild
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Build
      jsonPath: .metadata.labels['forge\.build/build-name']
      name: Build
      type: string
    - description: Instance ID
      jsonPath: .status.instanceID
      name: Instance ID
      type: string
    - description: Build is ready
      jsonPath: .status.ready
      name: Ready
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AWSBuild is the Schema for the awsbuilds API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AWSBuildSpec defines the desired state of AWSBuild.
            properties:
              InstanceID:
                description: InstanceID is the unique identifier as specified by the
                  cloud provider.
                type: string
              additionalVolumes:
                description: AdditionalVolumes defines additional volumes to attach
                  to the instance.
                items:
                  description: AttachedVolumeSpec defines AWS machine volumes.
                  properties:
                    encryptionKey:
                      description: EncryptionKey defines the KMS key to be used to
                        encrypt the volume.
                      type: string
                    iops:
                      description: IOPS specifies the IOPS for provisioned IOPS volumes.
                      format: int64
                      type: integer
                    size:
                      description: |-
                        Size is the size of the volume in GB.
                        Defaults to 30GB.
                      format: int64
                      type: integer
                    volumeType:
                      description: VolumeType specifies the type of volume (e.g.,
                        gp2, io1).
                      type: string
                  type: object
                type: array
              ami:
                description: AMI is the Amazon Machine Image ID to use for the instance.
                type: string
              credentialsRef:
                description: |-
                  CredentialsRef is a reference to a Secret that contains the credentials to use for provisioning this cluster. If not
                  supplied then the credentials of the controller will be used.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              generateSSHKey:
                description: |-
                  GenerateSSHKey is a flag to specify whether the controller should generate a new private key for the connection.
                  GenerateSSHKey will take precedence over the privateKey in the secret.
                type: boolean
              iamRole:
                description: IAMRole specifies the IAM role to associate with the
                  instance.
                type: string
              instanceType:
                description: InstanceType is the EC2 instance type (e.g., t2.micro,
                  m5.large).
                type: string
              network:
                description: VPCName encapsultes all the things related to AWS VPC
                properties:
                  assignPublicIP:
                    description: AssignPublicIP specifies whether to assign a public
                      IP to the instance.
                    type: boolean
                  name:
                    description: Name specifies the Name of the Virtual Private Cloud
                      (VPC) for the instance.
                    type: string
                  securityGroup:
                    description: SecurityGroupID list the security group to associate
                      with the instance.
                    type: string
                  subnetID:
                    description: SubnetID specifies the ID of the subnet for the instance.
                    type: string
                  vpcID:
                    description: VPCID specifies the ID of the Virtual Private Cloud
                      (VPC) for the instance.
                    type: string
                type: object
              publicIP:
                description: PublicIP specifies whether the instance should have a
                  public IP.
                type: boolean
              region:
                description: Region is the AWS region for the build.
                type: string
              rootVolume:
                description: RootVolume specifies the root volume configuration.
                properties:
                  encryptionKey:
                    description: EncryptionKey defines the KMS key to be used to encrypt
                      the volume.
                    type: string
                  iops:
                    description: IOPS specifies the IOPS for provisioned IOPS volumes.
                    format: int64
                    type: integer
                  size:
                    description: |-
                      Size is the size of the volume in GB.
                      Defaults to 30GB.
                    format: int64
                    type: integer
                  volumeType:
                    description: VolumeType specifies the type of volume (e.g., gp2,
                      io1).
                    type: string
                type: object
              sshCredentialsRef:
                description: |-
                  CredentialsRef is a reference to the secret which contains the credentials to connect to the infrastructure machine.
                  The secret should contain the following keys:
                  - username: The username to connect to the machine
                  - password: The password for authentication (if applicable)
                  - privateKey: The SSH private key for authentication (if applicable)
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              subnet:
                description: Subnet specifies the subnet ID for the instance.
                type: string
              username:
                default: root
                description: Username is the username to connect to the infrastructure
                  machine.
                type: string
            required:
            - instanceType
            - region
            - username
            type: object
          status:
            description: AWSBuildStatus defines the observed state of AWSBuild.
            properties:
              artifactRef:
                description: ArtifactRef is the reference to the built artifact.
                type: string
              cleanedUP:
                default: false
                description: CleanUpReady indicates that the Infrastructure is cleaned
                  up or not.
                type: boolean
              conditions:
                description: Conditions lists the current conditions of the AWSBuild.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may be empty.
                      type: string
                    severity:
                      description: |-
                        severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: FailureMessage provides additional information about
                  a failure.
                type: string
              failureReason:
                description: FailureReason describes why the build failed, if applicable.
                type: string
              instanceState:
                description: InstanceStatus is the status of the GCP instance for
                  this machine.
                type: string
              machineReady:
                default: false
                description: MachineReady indicates that the associated machine is
                  ready to accept connection.
                type: boolean
              ready:
                default: false
                description: Ready indicates that the GCPBuild is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
